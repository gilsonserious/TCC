{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CarrinhoPage = class CarrinhoPage {\n  constructor(modalController, firebase, toastController, alertController, http, loadingController) {\n    this.modalController = modalController;\n    this.firebase = firebase;\n    this.toastController = toastController;\n    this.alertController = alertController;\n    this.http = http;\n    this.loadingController = loadingController;\n    this.total = 0;\n    this.step = 0;\n    this.cliente = {\n      nome: null,\n      dia: null,\n      // horario: null,\n      // cep: null,\n      // rua: null,\n      // bairro: null,\n      // cidade: null,\n      // complemento: \"\",\n      // numero: null,\n      troco: \"\",\n      horario: [{\n        \"titulo\": '19h as 20h20',\n        \"checked\": false\n      }, {\n        \"titulo\": '20h40 as 22h',\n        \"checked\": false\n      }, {\n        \"titulo\": '19h as 22h',\n        \"checked\": false\n      }]\n    }; //Total\n\n    this.firebase.carrinho.forEach(item => {\n      this.total = this.total + item.preco * item.quantidade;\n    });\n  }\n\n  deixarApenasUmMarcado(index) {\n    let i = 0;\n\n    for (i; i < this.cliente.horario.length; i++) {\n      if (i != index) {\n        this.cliente.horario[i].checked = false;\n      }\n    }\n  }\n\n  ngOnInit() {}\n\n  fechar() {\n    if (this.step > 0) {\n      this.step = 0;\n    } else {\n      this.modalController.dismiss();\n    }\n  }\n\n  remover(i) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        header: 'Quer mesmo remover esse item?',\n        message: 'Essa ação não pode ser desfeita.',\n        buttons: [{\n          text: 'Cancelar',\n          role: 'cancel',\n          handler: () => {}\n        }, {\n          text: 'Remover',\n          handler: () => {\n            this.firebase.carrinho.splice(i, 1); //Atualizar total\n\n            this.firebase.carrinho.forEach(item => {\n              this.total = this.total + item.preco * item.quantidade;\n            });\n          }\n        }]\n      });\n      yield alert.present();\n    });\n  }\n\n  finalizar() {\n    this.step = 1;\n  } // calcularCep(){\n  //   if(this.cliente.cep.length > 7){\n  //     this.http.get('https://viacep.com.br/ws/' + this.cliente.cep + '/json/').subscribe((r) => {\n  //       console.log(r)\n  //       this.cliente.bairro = r['bairro'];\n  //       this.cliente.rua = r['logradouro'];\n  //       this.cliente.cidade = r['localidade']\n  //     })\n  //   }\n  // }\n  //Finalizar pedido\n\n\n  enviar() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.cliente.nome) {\n        let pedido = {\n          cliente: this.cliente,\n          itens: this.firebase.carrinho,\n          status: 'aguardando',\n          data: new Date(),\n          total: this.total\n        };\n        const alert = yield this.alertController.create({\n          header: 'Deseja finalizar o pedido?',\n          message: 'O estabelecimento receberá sua solicitação.',\n          buttons: [{\n            text: 'Cancelar',\n            role: 'cancel',\n            handler: () => {}\n          }, {\n            text: 'Fazer pedido',\n            handler: () => __awaiter(this, void 0, void 0, function* () {\n              const loading = yield this.loadingController.create({\n                message: 'Finalizando...'\n              });\n              yield loading.present(); //Enviar para o firebase\n\n              this.firebase.pedir(pedido).then(id => __awaiter(this, void 0, void 0, function* () {\n                //Adicionar no localstorage\n                let historicoPedidos = JSON.parse(localStorage.getItem('historicoPedidos'));\n\n                if (!historicoPedidos) {\n                  historicoPedidos = [];\n                  historicoPedidos.push(id);\n                  localStorage.setItem('historicoPedidos', JSON.stringify(historicoPedidos));\n                } else {\n                  historicoPedidos.push(id);\n                  localStorage.setItem('historicoPedidos', JSON.stringify(historicoPedidos));\n                }\n\n                const toast = yield this.toastController.create({\n                  message: 'Tudo certo! Você pode acompanhar tudo na aba Meus Pedidos',\n                  duration: 2000\n                });\n                toast.present(); //Voltar para home\n\n                yield loading.dismiss();\n                this.firebase.carrinho = [];\n                this.step = 0;\n                this.fechar();\n              })).catch(() => __awaiter(this, void 0, void 0, function* () {\n                yield loading.dismiss();\n                const alert = yield this.alertController.create({\n                  header: 'Ops!',\n                  message: 'Algo deu errado. Por favor, tente novamente.',\n                  buttons: [{\n                    text: 'Voltar',\n                    role: 'cancel',\n                    handler: () => {}\n                  }]\n                });\n                yield alert.present();\n              }));\n            })\n          }]\n        });\n        yield alert.present();\n      } else {\n        const alert = yield this.alertController.create({\n          header: 'Ops!',\n          message: 'Por favor, preencha todos os campos.',\n          buttons: [{\n            text: 'Entendi',\n            role: 'cancel',\n            handler: () => {}\n          }]\n        });\n        yield alert.present();\n      }\n    });\n  }\n\n};\nCarrinhoPage = __decorate([Component({\n  selector: 'app-carrinho',\n  templateUrl: './carrinho.page.html',\n  styleUrls: ['./carrinho.page.scss']\n})], CarrinhoPage);\nexport { CarrinhoPage };","map":null,"metadata":{},"sourceType":"module"}
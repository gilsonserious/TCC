{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore/\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport let FirebaseService = /*#__PURE__*/(() => {\n  class FirebaseService {\n    constructor(afs, afAuth) {\n      this.afs = afs;\n      this.afAuth = afAuth;\n      this.carrinho = [];\n    }\n\n    iniciar() {\n      return new Promise((resolve, reject) => {\n        //Login anonimo\n        this.afAuth.signInAnonymously().then(() => {\n          //Recuperar configurações\n          this.afs.firestore.collection('config').doc('config').get().then(r => {\n            //Atribuir a variavel global (para recuperarmos de outras paginas)\n            this.config = r.data();\n            resolve(this.config);\n          });\n        });\n      });\n    }\n\n    agendamentos() {\n      return new Promise((resolve, reject) => {\n        //Recuperar pedidos\n        this.afs.firestore.collection('pedidos').get().then(lista => {\n          let array = [];\n          lista.forEach(item => {\n            //Formatar dado\n            let obj = item.data();\n            obj['id'] = item.id;\n            array.push(obj.cliente.data);\n          });\n          console.log(array);\n          resolve(array);\n        });\n      });\n    }\n\n    categorias() {\n      return new Promise((resolve, reject) => {\n        //Recuperar categorias\n        this.afs.firestore.collection('categorias').get().then(lista => {\n          let array = [];\n          lista.forEach(item => {\n            //Formatar dado\n            let obj = item.data();\n            obj['id'] = item.id;\n            array.push(obj);\n          });\n          resolve(array);\n        });\n      });\n    }\n\n    verificaData(data) {\n      return new Promise((resolve, reject) => {\n        //Recuperar categorias\n        this.afs.firestore.collection('pedidos').where('cliente.dia', '==', data).get().then(lista => {\n          let array = [];\n          lista.forEach(item => {\n            //Formatar dado\n            let obj = item.data();\n            obj['id'] = item.id;\n            array.push(obj);\n          });\n          console.log(array.length);\n          resolve(array.length);\n        });\n      });\n    }\n\n    produtosPorCategoria(categoriaId) {\n      return new Promise((resolve, reject) => {\n        //Recuperar categorias\n        this.afs.firestore.collection('produtos').where('categoria', '==', categoriaId).get().then(lista => {\n          let array = [];\n          lista.forEach(item => {\n            //Formatar dado\n            let obj = item.data();\n            obj['id'] = item.id;\n            array.push(obj);\n          });\n          resolve(array);\n        });\n      });\n    }\n\n    pedir(pedido) {\n      return new Promise((resolve, reject) => {\n        //Recuperar categorias\n        this.afs.firestore.collection('pedidos').add(pedido).then(r => {\n          resolve(r.id);\n        }).catch(e => {\n          reject(e);\n        });\n      });\n    }\n\n    pedido(id) {\n      return new Promise((resolve, reject) => {\n        //Recuperar categorias\n        this.afs.firestore.collection('pedidos').doc(id).get().then(r => {\n          resolve(r.data());\n        }).catch(e => {\n          reject(e);\n        });\n      });\n    }\n\n  }\n\n  FirebaseService.ɵfac = function FirebaseService_Factory(t) {\n    return new (t || FirebaseService)(i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n\n  FirebaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FirebaseService,\n    factory: FirebaseService.ɵfac,\n    providedIn: 'root'\n  });\n  return FirebaseService;\n})();","map":null,"metadata":{},"sourceType":"module"}